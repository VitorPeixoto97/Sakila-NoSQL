// TODO
// TODO: special_features(film) pode ser dividida numa lista

// testing

db.film.findOne()
db.film.aggregate([ 
    {'$project':{_id:0,film_id:1,available_stores:1,nhe:'nhe'}},
    {'$sort': {'film_id':1}} ])


db.storeAUX.aggregate([
    {$lookup: {
        from: 'staffAUX',
        localField: 'store_id',
        foreignField: 'store_id',
        as: 'staff'
    }},
    {$lookup: {
        from: 'inventoryAUX',
        localField: 'store_id',
        foreignField: 'store_id',
        as: 'available_films'
    }},
    {$unwind:'$staff'},
    {$unwind:'$available_films'},
    {$group:{
        '_id':'$_id',
        'manager_name':{'$first':'$manager_name'},
        'staff': {'$addToSet':{
            staff_name:'$staff.staff_name',
            email:'$staff.email',
            active:'$staff.active',
            username:'$staff.username',
            password:'$staff.password',
            last_update:'$staff.last_update',
            address:'$staff.address',
        }},
        'available_films': {'$addToSet':'$available_films.film_id'}
    }}
])



// query - 5 staffs que mais dinheiro ganham
db.store.aggregate([
    {$group:{
        _id: '$staff.staff_name',
        active: {$first: '$staff.active'},
        staff_id: {$first: '$staff.staff_id'}
    }},
    {$unwind:"$_id"},
    {$unwind:"$active"},
    {$unwind:"$staff_id"},
    {$match: {active:1}},
    {$lookup: {
        from: 'rental',
        localField: 'staff_id',
        foreignField: 'staff_id',
        as: 'RENTALS'
    }},
    {$project: {
        _id:1,
        staff_id:1,
        // AMOUNTS:'$RENTALS.amount',
        TOTAL_AMOUNTS:{$sum:'$RENTALS.amount'},
        numberPayments: {$size: '$RENTALS'}
    }},
    {$sort:{TOTAL_AMOUNTS:-1}},
    {$limit:5}
])
